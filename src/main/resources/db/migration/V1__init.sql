-- 상영 유형
CREATE TABLE screen_types (
    type         VARCHAR2(50),
    icon_url     VARCHAR2(255),
    price        NUMBER(10) NOT NULL,

    PRIMARY KEY (type)
);

-- 상영관
CREATE TABLE theaters (
    id           NUMBER,
    name         VARCHAR2(100) UNIQUE NOT NULL,
    layout       CLOB CHECK (layout IS JSON) NOT NULL,
    created_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at   TIMESTAMP,

    PRIMARY KEY (id)
);

-- 상영관 좌석
CREATE TABLE theater_seats (
    theater_id   NUMBER,
    seat_number  VARCHAR2(10),
    is_available CHAR(1) DEFAULT 'Y' CHECK (is_available IN ('Y', 'N')),
    created_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at   TIMESTAMP,

    PRIMARY KEY (theater_id, seat_number),
    FOREIGN KEY (theater_id) REFERENCES theaters(id) ON DELETE CASCADE
);

-- 상영관 제공 상영유형
CREATE TABLE theater_screen_types (
    theater_id   NUMBER,
    screen_type  VARCHAR2(50),

    PRIMARY KEY (theater_id, screen_type),
    FOREIGN KEY (theater_id) REFERENCES theaters(id),
    FOREIGN KEY (screen_type) REFERENCES screen_types(type)
);

-- 장르
CREATE TABLE genres (
    name         VARCHAR2(50),
    description  VARCHAR2(255),
    image_url    VARCHAR2(255),

    PRIMARY KEY (name)
);

-- 고객 유형
CREATE TABLE customer_types (
    type            VARCHAR2(50),
    discount_amount NUMBER(10) NOT NULL,

    PRIMARY KEY (type)
);

-- 은행
CREATE TABLE banks (
    name            VARCHAR2(50),
    logo_url        VARCHAR2(255),
    discount_amount NUMBER(10) NOT NULL,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at      TIMESTAMP,

    PRIMARY KEY (name)
);

-- 카드사
CREATE TABLE card_companies (
    name            VARCHAR2(50),
    logo_url        VARCHAR2(255),
    discount_amount NUMBER(10) NOT NULL,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at      TIMESTAMP,

    PRIMARY KEY (name)
);

-- 어드민
CREATE TABLE admins (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    username VARCHAR2(20) UNIQUE NOT NULL,
    password CHAR(64) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP,

    PRIMARY KEY (id)
);

CREATE TABLE customers (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    user_type VARCHAR2(20) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY (id)
);

CREATE TABLE guests (
    customer_id NUMBER,
    name VARCHAR2(50) NOT NULL,
    phone VARCHAR2(20) NOT NULL,
    birth_date DATE NOT NULL,
    password CHAR(64) NOT NULL,

    PRIMARY KEY (customer_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id) ON DELETE CASCADE
);

-- 영화
CREATE TABLE movies (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR2(255) NOT NULL,
    synopsis VARCHAR2(255),
    running_time NUMBER(10) NOT NULL,
    rating VARCHAR2(10) NOT NULL,
    release_date DATE NOT NULL,
    director VARCHAR2(50) NOT NULL,
    distributor VARCHAR2(50) NOT NULL,
    poster_url VARCHAR2(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP,

    PRIMARY KEY (id)
);

-- 영화 제공 상영유형
CREATE TABLE movie_screen_types (
    movie_id NUMBER NOT NULL,
    screen_type VARCHAR2(50) NOT NULL,

    PRIMARY KEY (movie_id, screen_type),
    FOREIGN KEY (movie_id) REFERENCES movies(id),
    FOREIGN KEY (screen_type) REFERENCES screen_types(type)
);

-- 상영 일정
CREATE TABLE screenings (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    movie_id NUMBER NOT NULL,
    theater_id NUMBER NOT NULL,
    screen_type VARCHAR2(50) NOT NULL,
    start_time TIMESTAMP NOT NULL,
    duration NUMBER(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP,

    PRIMARY KEY (id),
    FOREIGN KEY (movie_id) REFERENCES movies(id),
    FOREIGN KEY (theater_id) REFERENCES theaters(id),
    FOREIGN KEY (screen_type) REFERENCES screen_types(type)
);